/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Isabel
 */
public class thegui extends javax.swing.JFrame {

    /**
     * Creates new form thegui
     */
    static bio current = new bio();
    
    public thegui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        NameField = new javax.swing.JTextField();
        QuoteField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        HB1Field = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        VB1Field = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        Item2Field = new javax.swing.JTextField();
        Item3Field = new javax.swing.JTextField();
        Item1Field = new javax.swing.JTextField();
        HDField = new javax.swing.JTextField();
        HatcheryIMGField = new javax.swing.JTextField();
        HatcheryURLField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        NicknameField = new javax.swing.JTextField();
        AgeField = new javax.swing.JTextField();
        PronounsField = new javax.swing.JTextField();
        SexualityField = new javax.swing.JTextField();
        GenderField = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        MateNameField = new javax.swing.JTextField();
        MateURLField = new javax.swing.JTextField();
        RelativeNameField = new javax.swing.JTextField();
        RelativeURLField = new javax.swing.JTextField();
        FriendNameField = new javax.swing.JTextField();
        FriendURLField = new javax.swing.JTextField();
        EnemyNameField = new javax.swing.JTextField();
        EnemyURLField = new javax.swing.JTextField();
        FDField = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        ResidenceField = new javax.swing.JTextField();
        BirthplaceField = new javax.swing.JTextField();
        LikesField = new javax.swing.JTextField();
        DislikesField = new javax.swing.JTextField();
        HobbiesField = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        BirthFlightField = new javax.swing.JTextField();
        OriField = new javax.swing.JTextField();
        AlignField = new javax.swing.JTextField();
        VirtueField = new javax.swing.JTextField();
        ViceField = new javax.swing.JTextField();
        ScentField = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        VB2Field = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BBCodeField = new javax.swing.JTextArea();
        GenerateButton = new javax.swing.JButton();
        RandomizeButton = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField37 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(600, 400));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setAutoscrolls(true);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        NameField.setText("Unnamed");
        NameField.setBorder(javax.swing.BorderFactory.createTitledBorder("Name"));

        QuoteField.setText("This dragon is an enigma, a mystery. They don't share much.");
        QuoteField.setBorder(javax.swing.BorderFactory.createTitledBorder("Quote/Tagline/Subtext"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(QuoteField)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NameField, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(QuoteField))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        HB1Field.setText("http://orig09.deviantart.net/e369/f/2016/290/5/b/horizontal_template2_by_intimer_genetics_inc-dalc0r9.png");
        HB1Field.setBorder(javax.swing.BorderFactory.createTitledBorder("Horizontal Banner"));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HB1Field)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HB1Field, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        VB1Field.setText("http://orig04.deviantart.net/9133/f/2016/290/9/0/verticalbannertemplate_by_intimer_genetics_inc-dalc0rn.png");
        VB1Field.setBorder(javax.swing.BorderFactory.createTitledBorder("Vertical Banner 1"));

        jLabel3.setText("85x410 px");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VB1Field, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel3)
                        .addGap(0, 45, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VB1Field)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Item2Field.setText("Mantarune");
        Item2Field.setBorder(javax.swing.BorderFactory.createTitledBorder("Familiar/Item 2"));

        Item3Field.setText("Snow Streak");
        Item3Field.setBorder(javax.swing.BorderFactory.createTitledBorder("Familiar/Item 3"));

        Item1Field.setText("Lesser Wisp");
        Item1Field.setBorder(javax.swing.BorderFactory.createTitledBorder("Familiar/Item 1"));
        Item1Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Item1FieldActionPerformed(evt);
            }
        });

        HDField.setText("http://orig07.deviantart.net/e0aa/f/2016/339/9/f/tumblr_inline_nl9cnutn5w1qb2yyz_by_intimer_genetic_by_intimer_genetics_inc-daqnao2.png");
        HDField.setBorder(javax.swing.BorderFactory.createTitledBorder("Horizontal Divider"));

        HatcheryIMGField.setText("http://orig14.deviantart.net/f3d4/f/2016/232/4/5/oie_oie_overlay__1__by_intimer_genetics_inc-daens5k.gif");
        HatcheryIMGField.setBorder(javax.swing.BorderFactory.createTitledBorder("Hatchery IMG Link"));

        HatcheryURLField.setText("http://www1.flightrising.com/forums/baz/1532088");
        HatcheryURLField.setBorder(javax.swing.BorderFactory.createTitledBorder("Hatchery URL Link"));

        jButton1.setText("Randomize");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(HDField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HatcheryIMGField, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HatcheryURLField))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(Item1Field, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Item2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Item3Field, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(Item2Field)
                    .addComponent(Item1Field)
                    .addComponent(Item3Field)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HDField, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(HatcheryIMGField)
                    .addComponent(HatcheryURLField))
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        NicknameField.setText("None");
        NicknameField.setBorder(javax.swing.BorderFactory.createTitledBorder("Nickname"));

        AgeField.setText("Adult");
        AgeField.setBorder(javax.swing.BorderFactory.createTitledBorder("Age"));

        PronounsField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        PronounsField.setText("She/Her");
        PronounsField.setBorder(javax.swing.BorderFactory.createTitledBorder("Pronouns"));

        SexualityField.setText("Asexual");
        SexualityField.setBorder(javax.swing.BorderFactory.createTitledBorder("Sexuality"));

        GenderField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        GenderField.setText("Female");
        GenderField.setBorder(javax.swing.BorderFactory.createTitledBorder("Gender"));
        GenderField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenderFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NicknameField)
                    .addComponent(AgeField)
                    .addComponent(SexualityField)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(GenderField, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PronounsField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NicknameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AgeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PronounsField)
                    .addComponent(GenderField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SexualityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        MateNameField.setText("None");
        MateNameField.setBorder(javax.swing.BorderFactory.createTitledBorder("Mate Name"));

        MateURLField.setText("http://flightrising.com/main.php?dragon=6");
        MateURLField.setBorder(javax.swing.BorderFactory.createTitledBorder("Mate URL"));

        RelativeNameField.setText("None");
        RelativeNameField.setBorder(javax.swing.BorderFactory.createTitledBorder("Relative"));

        RelativeURLField.setText("http://flightrising.com/main.php?dragon=6");
        RelativeURLField.setBorder(javax.swing.BorderFactory.createTitledBorder("Relative URL"));

        FriendNameField.setText("None");
        FriendNameField.setToolTipText("");
        FriendNameField.setBorder(javax.swing.BorderFactory.createTitledBorder("Friend"));

        FriendURLField.setText("http://flightrising.com/main.php?dragon=6");
        FriendURLField.setBorder(javax.swing.BorderFactory.createTitledBorder("Friend URL"));

        EnemyNameField.setText("None");
        EnemyNameField.setBorder(javax.swing.BorderFactory.createTitledBorder("Enemy"));

        EnemyURLField.setText("http://flightrising.com/main.php?dragon=6");
        EnemyURLField.setBorder(javax.swing.BorderFactory.createTitledBorder("Enemy URL"));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(EnemyNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(FriendNameField)
                    .addComponent(RelativeNameField)
                    .addComponent(MateNameField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MateURLField, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(RelativeURLField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(FriendURLField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(EnemyURLField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MateURLField)
                    .addComponent(MateNameField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RelativeNameField)
                    .addComponent(RelativeURLField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(FriendNameField)
                    .addComponent(FriendURLField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EnemyNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EnemyURLField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        FDField.setText("http://orig03.deviantart.net/553d/f/2016/290/3/e/tumblr_nj9kyb0aii1r28672o5_500_by_intimer_genetics_inc-dalbu8t.png");
        FDField.setBorder(javax.swing.BorderFactory.createTitledBorder("Flight Divider (250px wide)"));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ResidenceField.setText("Sornieth");
        ResidenceField.setBorder(javax.swing.BorderFactory.createTitledBorder("Residence"));

        BirthplaceField.setText("Sornieth");
        BirthplaceField.setBorder(javax.swing.BorderFactory.createTitledBorder("Birthplace"));

        LikesField.setText("Unknown");
        LikesField.setBorder(javax.swing.BorderFactory.createTitledBorder("Likes"));

        DislikesField.setText("Unknown");
        DislikesField.setBorder(javax.swing.BorderFactory.createTitledBorder("Dislikes"));

        HobbiesField.setText("None");
        HobbiesField.setBorder(javax.swing.BorderFactory.createTitledBorder("Hobbies"));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResidenceField)
                    .addComponent(BirthplaceField)
                    .addComponent(LikesField, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(DislikesField)
                    .addComponent(HobbiesField))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ResidenceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BirthplaceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LikesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DislikesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HobbiesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        BirthFlightField.setText("Ice");
        BirthFlightField.setBorder(javax.swing.BorderFactory.createTitledBorder("Birth Flight"));
        BirthFlightField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BirthFlightFieldActionPerformed(evt);
            }
        });

        OriField.setText("Unknown");
        OriField.setBorder(javax.swing.BorderFactory.createTitledBorder("Origin"));

        AlignField.setText("Neutral Good");
        AlignField.setBorder(javax.swing.BorderFactory.createTitledBorder("Align"));

        VirtueField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        VirtueField.setText("None");
        VirtueField.setBorder(javax.swing.BorderFactory.createTitledBorder("Virtue"));

        ViceField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        ViceField.setText("None");
        ViceField.setToolTipText("");
        ViceField.setBorder(javax.swing.BorderFactory.createTitledBorder("Vice"));

        ScentField.setText("Pine Trees");
        ScentField.setBorder(javax.swing.BorderFactory.createTitledBorder("Scent"));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScentField)
                    .addComponent(OriField)
                    .addComponent(BirthFlightField)
                    .addComponent(AlignField)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(VirtueField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ViceField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AlignField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VirtueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ViceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BirthFlightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OriField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FDField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(FDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        VB2Field.setText("http://orig05.deviantart.net/b93b/f/2016/290/a/5/starbanner_right1_by_intimer_genetics_inc-dalbyqg.png");
        VB2Field.setBorder(javax.swing.BorderFactory.createTitledBorder("Vertical Banner 2"));

        jLabel2.setText("185x400 px");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VB2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel2)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VB2Field)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("BB Code"));

        BBCodeField.setColumns(20);
        BBCodeField.setRows(5);
        jScrollPane1.setViewportView(BBCodeField);

        GenerateButton.setText("Generate Code");
        GenerateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateButtonActionPerformed(evt);
            }
        });

        RandomizeButton.setText("Randomize");
        RandomizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RandomizeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(GenerateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RandomizeButton)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenerateButton)
                    .addComponent(RandomizeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Template Sources - Do not edit, just copy");

        jTextField7.setText("http://flightrising.com/main.php?p=lair&id=30450&tab=dragon&did=10311349");
        jTextField7.setBorder(javax.swing.BorderFactory.createTitledBorder("Horizontal Banner"));

        jTextField8.setText("http://flightrising.com/main.php?p=lair&id=30450&tab=dragon&did=20281372");
        jTextField8.setBorder(javax.swing.BorderFactory.createTitledBorder("Vertical Banner"));

        jTextField9.setText("http://ammoth.tumblr.com/post/110092763801");
        jTextField9.setBorder(javax.swing.BorderFactory.createTitledBorder("Flight Dividers"));

        jTextField37.setText("http://glowingdragons.tumblr.com/post/139502595245/flight-frithsamur-little-lanterns-for-your-bio");
        jTextField37.setToolTipText("");
        jTextField37.setBorder(javax.swing.BorderFactory.createTitledBorder("Flight Lantern Dividers"));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jTextField9, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jScrollPane3.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1399, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BirthFlightFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BirthFlightFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BirthFlightFieldActionPerformed

    private void Item1FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Item1FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Item1FieldActionPerformed

    private void GenerateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateButtonActionPerformed
        // TODO add your handling code here:
        BBCodeField.setText(" ");
        
        current.setAge(AgeField.getText());
        current.setAlign(AlignField.getText());
        current.setBirthfl(BirthFlightField.getText());
        current.setQuote(QuoteField.getText());
        current.setHb(HB1Field.getText());
        current.setVb1(VB1Field.getText());
        current.setVb2(VB2Field.getText());
        current.setFd(FDField.getText());
        current.setNickname(NicknameField.getText());
        current.setGender(GenderField.getText());
        current.setPronouns(PronounsField.getText());
        current.setSexuality(SexualityField.getText());
        current.setResidence(ResidenceField.getText());
        current.setBirthplace(BirthplaceField.getText());
        current.setLikes(LikesField.getText());
        current.setDislikes(DislikesField.getText());
        current.setHobbies(HobbiesField.getText());
        current.setMatename(MateNameField.getText());
        current.setMateurl(MateURLField.getText());
        current.setRelname(RelativeNameField.getText());
        current.setRelurl(RelativeURLField.getText());
        current.setFriendname(FriendNameField.getText());
        current.setFriendurl(FriendURLField.getText());
        current.setEnemyname(EnemyNameField.getText());
        current.setEnemyurl(EnemyURLField.getText());
        current.setVice(ViceField.getText());
        current.setVirtue(VirtueField.getText());
        current.setOrig(OriField.getText());
        current.setScent(ScentField.getText());
        current.setItem1(Item1Field.getText());
        current.setItem2(Item2Field.getText());
        current.setItem3(Item3Field.getText());
        current.setHd(HDField.getText());
        current.setHatchery(HatcheryURLField.getText(),HatcheryIMGField.getText());
        current.setName(NameField.getText());
        
        current.makeName();
        BBCodeField.setText(current.makeBio());
        
    }//GEN-LAST:event_GenerateButtonActionPerformed

    private void GenderFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenderFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenderFieldActionPerformed

    private void RandomizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RandomizeButtonActionPerformed
        // TODO add your handling code here:
        current.genName();
        NameField.setText(current.getName());
        
        current.genAge();
        AgeField.setText(current.getAge());
        
        current.genGen();
        GenderField.setText(current.getGender());
        
        current.genSexuality();
        SexualityField.setText(current.getSexuality());
        
        current.genlikes();
        LikesField.setText(current.getLikes());
        DislikesField.setText(current.getDislikes());
        
        current.genAlign();
        AlignField.setText(current.getAlign());
        
        current.genVirtue();
        VirtueField.setText(current.getVirtue());
        
        current.genVice();
        ViceField.setText(current.getVice());
        
        current.genJob();
        HobbiesField.setText(current.getHobbies());
        
        current.genScents();
        ScentField.setText(current.getScent());
        
    }//GEN-LAST:event_RandomizeButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        current.genMats();
        Item1Field.setText(current.getItem1());
        Item2Field.setText(current.getItem2());
        Item3Field.setText(current.getItem3());
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(thegui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(thegui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(thegui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(thegui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new thegui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AgeField;
    private javax.swing.JTextField AlignField;
    private javax.swing.JTextArea BBCodeField;
    private javax.swing.JTextField BirthFlightField;
    private javax.swing.JTextField BirthplaceField;
    private javax.swing.JTextField DislikesField;
    private javax.swing.JTextField EnemyNameField;
    private javax.swing.JTextField EnemyURLField;
    private javax.swing.JTextField FDField;
    private javax.swing.JTextField FriendNameField;
    private javax.swing.JTextField FriendURLField;
    private javax.swing.JTextField GenderField;
    private javax.swing.JButton GenerateButton;
    private javax.swing.JTextField HB1Field;
    private javax.swing.JTextField HDField;
    private javax.swing.JTextField HatcheryIMGField;
    private javax.swing.JTextField HatcheryURLField;
    private javax.swing.JTextField HobbiesField;
    private javax.swing.JTextField Item1Field;
    private javax.swing.JTextField Item2Field;
    private javax.swing.JTextField Item3Field;
    private javax.swing.JTextField LikesField;
    private javax.swing.JTextField MateNameField;
    private javax.swing.JTextField MateURLField;
    private javax.swing.JTextField NameField;
    private javax.swing.JTextField NicknameField;
    private javax.swing.JTextField OriField;
    private javax.swing.JTextField PronounsField;
    private javax.swing.JTextField QuoteField;
    private javax.swing.JButton RandomizeButton;
    private javax.swing.JTextField RelativeNameField;
    private javax.swing.JTextField RelativeURLField;
    private javax.swing.JTextField ResidenceField;
    private javax.swing.JTextField ScentField;
    private javax.swing.JTextField SexualityField;
    private javax.swing.JTextField VB1Field;
    private javax.swing.JTextField VB2Field;
    private javax.swing.JTextField ViceField;
    private javax.swing.JTextField VirtueField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
} 

    class bio {
        public static String hatchery = "hatchery";
        public static String getHatchery(){return hatchery;}
        public static void setHatchery(String a, String b){hatchery = "[url="+a+"][img]"+b+"[/img][/url]";}
        
        public static String name = "name";
        public static String getName() {return name;}
        public static void setName(String a) {name=a;}
        
        public static String quote = "quote";
        public static String getQuote() {return quote;}
        public static void setQuote(String a) {quote=a;}
        
        public static String hb = "hb";
        public static String getHb() {return hb;}
        public static void setHb(String a) {hb=a;}
        
        public static String vb1 = "vb1";
        public static String getVb1() {return vb1;}
        public static void setVb1(String a) {vb1=a;}
        
        public static String vb2 = "vb2";
        public static String getVb2() {return vb2;}
        public static void setVb2(String a) {vb2=a;}
        
        public static String fd = "fd";
        public static String getFd() {return fd;}
        public static void setFd(String a) {fd=a;}
        
        public static String nickname = "nickname";
        public static String getNickname() {return nickname;}
        public static void setNickname(String a) {nickname=a;}
        
        public static String age = "age";
        public static String getAge() {return age;}
        public static void setAge(String a) {age=a;}
        
        public static String gender = "gender";
        public static String getGender() {return gender;}
        public static void setGender(String a) {gender=a;}
        
        public static String pronouns = "pronouns";
        public static String getPronouns() {return pronouns;}
        public static void setPronouns(String a) {pronouns=a;}
        
        public static String sexuality = "sexuality";
        public static String getSexuality() {return sexuality;}
        public static void setSexuality(String a) {sexuality=a;}
        
        public static String residence = "residence";
        public static String getResidence() {return residence;}
        public static void setResidence(String a) {residence=a;}
        
        public static String birthplace = "birthplace";
        public static String getBirthplace() {return birthplace;}
        public static void setBirthplace(String a) {birthplace=a;}
        
        public static String likes = "likes";
        public static String getLikes() {return likes;}
        public static void setLikes(String a) {likes=a;}
        
        public static String dislikes = "dislikes";
        public static String getDislikes() {return dislikes;}
        public static void setDislikes(String a) {dislikes=a;}
        
        public static String hobbies = "hobbies";
        public static String getHobbies() {return hobbies;}
        public static void setHobbies(String a) {hobbies=a;}
        
        public static String matename = "matename";
        public static String getMatename() {return matename;}
        public static void setMatename(String a) {matename=a;}
        
        public static String mateURL = "mateURL";
        public static String getMateurl() {return mateURL;}
        public static void setMateurl(String a) {mateURL=a;}
        
        public static String relname = "relname";
        public static String getRelname() {return relname;}
        public static void setRelname(String a) {relname=a;}
        
        public static String relURL = "relURL";
        public static String getRelurl() {return relURL;}
        public static void setRelurl(String a) {relURL=a;}
        
        public static String friendname = "friendname";
        public static String getFriendname() {return friendname;}
        public static void setFriendname(String a) {friendname=a;}
        
        public static String friendURL = "friendURL";
        public static String getFriendurl() {return friendURL;}
        public static void setFriendurl(String a) {friendURL=a;}
        
        public static String enemyname = "enemyname";
        public static String getEnemyname() {return enemyname;}
        public static void setEnemyname(String a) {enemyname=a;}
        
        public static String enemyURL = "enemyURL";
        public static String getEnemyurl() {return enemyURL;}
        public static void setEnemyurl(String a) {enemyURL=a;}        
                
        public static String align = "align";
        public static String getAlign() {return align;} 
        public static void setAlign(String a) {align = a;}
        
        public static String virtue = "virtue";
        public static String getVirtue() {return virtue;}
        public static void setVirtue(String a) {virtue=a;}
        
        public static String vice = "vice";
        public static String getVice() {return vice;}
        public static void setVice(String a) {vice=a;}
        
        public static String scent = "scent";
        public static String getScent() {return scent;}
        public static void setScent(String a) {scent=a;}
        
        public static String birthfl = "birthfl";
        public static String getBirthfl() {return birthfl;}
        public static void setBirthfl(String a) {birthfl=a;}
        
        public static String orig = "orig";
        public static String getOrig() {return orig;}
        public static void setOrig(String a) {orig=a;}        
        
        public static String item1 = "item1";
        public static String getItem1() {return item1;}
        public static void setItem1(String a) {item1=a;}
        
        public static String item2 = "item2";
        public static String getItem2() {return item2;}
        public static void setItem2(String a) {item2=a;}
        
        public static String item3 = "item3";
        public static String getItem3() {return item3;}
        public static void setItem3(String a) {item3=a;}        
        
        public static String hd = "hd";
        public static String getHd() {return hd;}
        public static void setHd(String a) {hd=a;}
        
        public static void makeName() { name = name.toUpperCase(); }
        public static void makeItems() { item1 = "[item="+item1+"]"; item2 = "[item="+item2+"]"; item3 = "[item="+item3+"]"; }
       
        public static void genName() {
  String[] prefix = {"anti","auto","de","dis","down","extra","hyper","il","im","in","ir","inter","mega","mid","mis","non","over","out","post","pre","pro","re","semi","sub","sub","super","tele","trans","ultra","un","under","up"};
  String[] firCon = {"t", "n", "s", "r", "d", "f", "c", "b", "z"};
  String[] secCon = {"r", "h", "s","v"};
  String[] firVow = {"e", "a", "i", "o", "oo", "u"};
  String[] thiCon = {"t", "v", "w", "x", "ck", "g", "p", "ch", "sh","ph","rr",};
  String[] secVow = {"e", "i", "o","a","u"}; 
  String[] fouCon = {"r", "s", "y","de","x","ra","le",};
  String[] suffix = {"iode","able","ac","acity","ocity","ade","age","aholic","oholic","al","algia","an","ian","ance","ant","ar","ard","arian","arium","orium","ary","ation","ate","ative","cide","cracy","crat","cule","cy","cycle","dom","dox","ed","ee","ectomy","eer","emia","en","ence","ency","ent","er","ern","escence","ese","esque","ess","est","etic","ette","ful","fy","gam","gamy","gon","gonic","hood","ial","ian","iasis","iatric","ible","ic","ical","ile","ily","ine","ing","ion","ious","ish","ism","ist","ite","itis","ity","ive","ization","ize","less","let","like","ling","loger","logist","log","ly","ment","ness","oid","ology","oma","onym","opia","opsy","or","ory","osis","ostomy","otomy","ous","path","pathy","phile","phobia","phone","phyte","plegia","plegic","pnea","scopy","scope","scribe","script","sect","ship","sion","some","sophy","sophic","th","tion","tome","tomy","tude","trophy","tude","ty","ular","uous","ure","ward","ware","wise"};
  int numnum = (int)(Math.random() * 100000);  
  String result = " ";         
        //start with the prefix
        if(Math.random() < .5) {
            result += prefix[(int)(Math.random() * prefix.length)];
        }
        
        //then the first consonant
        if(Math.random() < .7) {
            result += firCon[(int)(Math.random() * firCon.length)];
        }
        
        //then the possible second consonant
        if(Math.random() < .4) {
            result += secCon[(int)(Math.random() * secCon.length)];
        }
        
        //then the first vowel
        if(Math.random() < .9) {
            result += firVow[(int)(Math.random() * firVow.length)];
        }
        
        //then the third consonant
        if(Math.random() < .8) {
            result += thiCon[(int)(Math.random() * thiCon.length)];
        }
        
        //then the second vowel
        if(Math.random() < .6) {
            result += secVow[(int)(Math.random() * secVow.length)];
        }
        
        //then the fourth consonant
        if(Math.random() < .5) {
            result += fouCon[(int)(Math.random() * fouCon.length)];
        }
        
        //possibly another vowel?
        if(Math.random() < .5) {
            result += secVow[(int)(Math.random() * secVow.length)];
        }
        
        //then the suffix
        if (Math.random() < .5) {
            result += suffix[(int)(Math.random() * suffix.length)];
        }
        
        //if it's short, then maybe repeat it. (Seg -> Segseg)
        if (Math.random() < .7 && (result.length() < 6)) {
        result += result.substring(1,result.length());
        }
        
        //lastly, capitalize the first letter.
        String temp1 = result.substring(1,2);
        String temp2 = result.substring(2,result.length());
        temp1 = temp1.toUpperCase();
        result = temp1 + temp2;
        
        //if it's too long, delete it. 
        if (result.length() > 9) {
             result = result.substring(0,8);
        }  
        name = result;       
    }
        public static void genMats(){
        String[] mats = {"Olive Sea Snake", "Magpie", "Crested Newt", "Black Capped Budgie", "Blue Throated Budgie", "Mute Swan", "Juvenile Prairie Skink", "River Warden", "Moonbeam Sardines", "Sardines", "Clown Shrimp", "Flying Fish", "Glowslug", "Sea Fae", "Stubby Squid", "Green Corycat", "Blue Swimmer Crab", "Lagoon Guppy", "Blue Dragon Seaslug", "Crystal Jellyfish", "Wild Green Discus", "Snowflake Urchin", "Glow Star", "Frostbite Beetle", "Tundra Grub", "Blue Cricket", "Lunar Lacewing", "Wasteland Pauper", "Snowkissed Centipede", "Silt Sifter", "Zebra Caterpillar", "Water Strider", "Giant Darner", "Marsh Choker", "Glow Mushroom", "Blue Parrot Tulip", "Sour Spinach", "Stellaria Media", "Seaberry", "Spearmint", "Lume Daffodil", "Charged Duneberry", "Perfect Skipping Stone", "Skipping Stone", "Blue Quartz", "Labradorite", "Raw Lapis Lazuli", "Azurite", "Faded Blue Fabric", "Discarded Ribbon", "Snakeskin Cloth", "Apatite", "Celestine", "Blue Goo", "Blue Ooze", "Blue Sludge", "Bluefin Charger Fin", "Bluestreaked Shell", "Coal Carpenter", "Dwarf Truffle", "Blue Dragon Reef Snail", "Bramble Guardian", "River Muck", "Zalis", "Permafrost Impaler", "Venerable Shalebuck", "Bluemoon Aviar", "Snow Streak", "Poisonous Toridae", "Wartoad", "Octoflyer", "Maren Scout", "Construction Mith", "Frost Delver", "Blue Vein Pansy", "Gaseous Megashrimp", "Hippojay", "Nephrite Chameleon", "Snowsquall Floracat", "Leftover Residue", "Lesser Wisp", "Tourmaline Vulstal", "Frostbite Hummingbird", "Shimmering Xolo", "Roundhorn Melprin", "Hati", "Rivermouth Flatbill", "Bucktooth Digger", "Ice Sprite", "Water Sprite", "Polarfreeze Defender", "Wavebreak Snarler", "Ectoplasmine", "Jadecarved Decoy", "Slumbering Charlatan", "Fawn Fox Rat", "Mantarune", "Great Blue Waveskimmer", "Lightning Sprite", "Lightning Lancer", "Azure Highnoon Hank", "Cobalt Deepsea Bulb", "Laureate's Cap", "Blue Satin Tunic", "Blue Bandana", "Alchemist's Fez", "Umbral Wreath", "Blue Renaissance Shirt", "Blue Breeches", "Cobalt Shades", "Winter Wind", "Waverider Cape", "Yelling Wyrmpeck", "Pixie Procession", "Cloudy Feathered Wings", "Chillspike Collar", "Sky Blue Tail Bangle", "Shock Bolt", "Thunder Slash", "Shock", "Frigid Bolt", "Freezing Slash", "Congeal", "Aquatic Might & Acuity Fragments", "Hydro Bolt", "Wave Slash", "Drown", "Meditate", "Guard", "Ward", "Concentration", "Cleansing Elixir"};
        int num = (int)(Math.random()*mats.length); item1 = mats[num];
        num = (int)(Math.random()*mats.length); item2 = mats[num];
        num = (int)(Math.random()*mats.length); item3 = mats[num];
       }
        public static void genAge() {
        String[] mats = {"Hatchling","Child","Teenager","Young Adult","Adult","Senior","Older Adult"};
        int num = (int)(Math.random()*mats.length);
        age = mats[num];
        }
        public static void genGen() {String[] mats = {"Female","Male","Genderfluid","Nonbinary","Trans"}; int num = (int)(Math.random()*mats.length); gender = mats[num];}
        public static void genSexuality() {
        String[] mats = {"Heterosexual","Asexual","Homosexual","Cassexual","Pansexual","Bisexual"};
        int num = (int)(Math.random()*mats.length);
        sexuality = mats[num];
        }
        public static void genlikes() {
        String[] mats = {"Cuddling", "Music", "Hot Chocolate", "Long Walks", "Dogs", "Cats", "Animals", "Sweaters", "Summer", "Winter", "Spring", "Nature", "Swimming", "Sweet Tea", "Smiling", "Laughing", "Jokes", "Long Hair", "Good Vibes", "Day Dreaming", "Reading", "Sleeping", "Food", "Blogging", "Photography", "Fuzzy Blankets", "Kissing", "Sex", "Hugs", "Hand Holding", "Money", "Clothes", "Football", "Basketball", "Baseball", "Kickball", "Dodge Ball", "Concerts", "Partying", "Drinking", "Weed", "Drugs", "Guys", "Girls", "Texting", "Dancing", "Shoes", "Fashion", "Acting", "Modeling", "Helping Others", "Kissing In The Rain", "Painting", "Drawing", "Horror Movies", "Romantic Movies", "Comedies", "Ice Cold Water", "Instant Tea", "Vivaldi", "Rap Music", "Bruegel & Vermeer", "Picasso", "Room Service", "Waiting", "Siena", "Mixed Vegetables", "Leonard Cohen’S Lyrics", "Ambulance Sirens", "Candles", "Telephone Solicitations", "Kites", "Junk Mail", "Apples", "Insurance", "All Things Apple", "Being Put On “Hold”", "Chocolate", "Colorized Movies", "Rainbows", "Strawberries", "Used Book Stores", "Crickets", "Good Manners", "“Sucks”", "Handmade Quilts", "Daily Oklahoman", "Cats", "Mice", "Jewelry", "Rolypoly Bugs", "Lapel Buttons", "Reruns", "Quotations", "Know-It-All’S", "“Slasher” Films", "Boiled Okra", "Shakespeare", "The Simpsons", "Post-It Notes", "Whining", "Garden Tomatoes", "Cigarettes", "Comfortable Shoes", "New Shoes", "Gossip", "Elmer’S Glue", "Cartridge Pens", "Snoring", "Mystery", "Whistling", "Quiet", "Trivial Trivia", "Chinese Elms", "Golf", "Roses", "Elvis Presley", "Body Hair", "Body Odor", "Germs", "Liars", "Hypocrites", "Drama", "Studying", "Being Alone", "Crowded Rooms", "People", "Mushrooms", "Bugs", "Wet Socks", "Crying", "Being Touched", "Rain", "Thunder Storms", "The Cold", "The Heat", "Summer", "Winter", "Spring", "Fall", "Water", "Reading", "School", "Sweating", "(Movie)", "(Artist)", "(Actor/Actress)", "Smoking", "Drinking", "Cheaters", "Kids", "Sad Movies", "Horror Movies", "Annoying People", "Puking", "Being Sick", "Rough Textures", "Funerals", "Boats", "Airplanes"};
        int num = (int)(Math.random()*mats.length);
        likes = mats[num]+", ";
        num = (int)(Math.random()*mats.length);
        likes += mats[num];
        num = (int)(Math.random()*mats.length);
        dislikes = mats[num]+", ";
        num = (int)(Math.random()*mats.length);
        dislikes += mats[num];
        }
        public static void genAlign(){
            String[] a = {"Neutral","Chaotic","Lawful"};
            String[] b = {"Good","Neutral","Evil"};
            int num = (int)(Math.random()*a.length);
            align = a[num]+" ";
            num = (int)(Math.random()*b.length);
            align += b[num];
        }
        public static void genVirtue() {String[] mats = {"Ability", "Abundance", "Acceptance", "Accountability", "Accuracy", "Achievement", "Acknowledgement", "Acting On Convictions", "Activism", "Adaptability", "Adoration", "Adventure", "Advice", "Affection", "Aging Gracefully", "Allowing", "Altruism", "Amazement", "Ambition", "Anger At Injustice", "Anticipation", "Apology", "Appeasement", "Appreciation", "Appreciation Of Beauty", "Appreciation Of", "Excellence", "Approbation", "Appropriate Knowledge", "Appropriate Conduct", "Approval", "Art", "Assertiveness", "Assumptions", "Atonement", "Attention", "Attitude", "Austerity", "Authenticity", "Authority", "Autonomy", "Awareness", "Awe", "Balance", "Beauty", "Being True To Oneself", "Belief", "Benevolence", "Benignity", "Bliss", "Bravery", "Candor", "Capacity To Love", "Capacity To Be Loved", "Care", "Caring", "Caution", "Celebration", "Celibacy", "Certainty", "Chance", "Change", "Chaos", "Character", "Charity", "Charm", "Chastity", "Cheerfulness", "Chivalry", "Choice", "Citizenship", "Civility", "Clarity", "Class", "Cleanliness", "Coincidence", "Collaboration", "Commitment", "Communication", "Communion", "Community", "Companionship", "Compassion", "Completeness", "Composure", "Comprehension", "Compromise", "Concentration", "Confession", "Confidence", "Congruence", "Conscience", "Consciousness", "Consecration", "Conservatism", "Consideration", "Consistency", "Contemplation", "Contentment", "Contribution", "Control", "Conviction", "Cooperation", "Cooperativeness", "Correctness", "Courage", "Courteousness", "Courtesy", "Creativity", "Credibility", "Critical Thinking", "Culture", "Curiosity", "Death (Acceptance Of)", "Decency", "Dedication", "Deliberation", "Delight", "Dependability", "Desire", "Destiny", "Detachment", "Determination", "Devotion To Virtues", "Devotion To Others", "Dignity", "Diligence", "Diplomacy", "Discernment", "Discipline", "Discretion", "Disillusion", "Dissolution", "Diversity", "Dreams", "Dutifulness", "Eagerness", "Earnestness", "Ecstasy", "Education", "Efficiency", "Endurance", "Effort", "Elegance", "Elevation", "Eloquence", "Emotion", "Empathy", "Emptiness", "Encouragement", "Endurance", "Energy", "Enlightenment", "Enthusiasm", "Epiphany", "Equality", "Equanimity", "Esteem", "Etiquette", "Excellence", "Excitement", "Expressiveness", "Extravagance", "Failure (Allowing For)", "Fairness", "Faith", "Faithfulness", "Family", "Farsightedness", "Fearlessness", "Feeling", "Fidelity", "Finishing What’S Started", "Flexibility", "Flow", "Focus", "Forbearance", "Foresight", "Forgiveness", "Fortitude", "Frankness", "Freedom", "Friendliness", "Friendship", "Frugality", "Fulfillment", "Fun", "Gallantry", "Generosity", "Genius", "Gentleness", "Genuineness", "Glory", "Goals", "Godliness", "Good Speech", "Goodness", "Grace", "Grandeur", "Gratefulness", "Gratitude", "Gravitas", "Gravity", "Growth", "Happiness", "Harmlessness", "Harmony", "Healing", "Health", "Heaven On Earth", "Helpfulness", "Helping Others", "Holiness", "Honesty", "Honor", "Hope", "Hopefulness", "Hospitality", "Humanity", "Humility", "Humor", "Idealism", "Ideals", "Illumination", "Imagination", "Impartiality", "Imperfection (Allowing For)", "Inclusion", "Incorruptibility", "Independence", "Individuality", "Industriousness", "Ingenuity", "Initiative", "Inner Exploration", "Innocence", "Innovation", "Insight", "Inspiration", "Instinct", "Integrity", "Intelligence", "Interdependence", "Interest In The World", "Intimacy", "Intuition", "Inventiveness", "Investigation", "Irony", "Joy", "Joyfulness", "Judgment (Good)", "Justice", "Kind Speech", "Kindness", "Kinship", "Knowledge", "Laughter", "Leadership", "Learning", "Leisure", "Liberalism", "Liberty", "Listening", "Logic", "Love", "Love Of Learning", "Loving-Kindness", "Lovingness", "Loyalty", "Luck", "Luxuriating", "Majesty", "Management", "Manners", "Maturity", "Meaning", "Mellowness", "Mercy", "Mildness", "Mindfulness", "Mistakes (Allowing For)", "Moderation", "Modesty", "Morality", "Motherhood", "Motivation", "Niceness", "Nobility", "Non-Covetousness", "Non-Duality", "Non-Separateness", "Non-Violence", "Nostalgia", "Nurturance", "Nurturing", "Objectivity", "Open-Heartedness", "Open-Mindedness", "Openness", "Optimism", "Order", "Orderliness", "Organization", "Originality", "Overcoming Adversity", "Pacifism", "Paradise", "Passion", "Patience", "Patriotism", "Peace", "Peacefulness", "Penitence", "Pensiveness", "Perseverance", "Persistence", "Personality", "Perspective", "Persuasion", "Philanthropy", "Piety", "Pity", "Planning", "Play", "Playfulness", "Pleasure", "Pluralism", "Politeness", "Positive Bias", "Potency", "Potential", "Power (Right Use Of)", "Practice", "Practicality", "Pragmatism", "Praise", "Prayer", "Prayerfulness", "Precision", "Principles", "Privacy", "Privilege", "Potency", "Probity", "Problem-Solving", "Productivity", "Professionalism", "Profit", "Promises", "Propriety", "Prosperity", "Protection", "Protest", "Prudence", "Punctuality", "Purification", "Purity", "Purity Of Heart", "Purpose", "Purposeful Work", "Purposefulness", "Quality Evaluation", "Quality Improvement", "Quest", "Radiance", "Rapture", "Rationality", "Realism", "Reality", "Realization", "Reason", "Rebirth", "Receptivity", "Reciprocity", "Reconciliation", "Rectitude", "Redemption", "Refinement", "Reflection", "Relaxation", "Release", "Reliability", "Religiosity", "Remembering", "Remembrance", "Remorse", "Renunciation", "Repentance", "Reputation", "Research", "Resilience", "Resisting Temptations", "Resolution", "Respect", "Respectability", "Respectfulness", "Responsibility", "Restraint", "Reverence", "Right Action", "Right Concentration", "Right Effort", "Right Intention", "Right Livelihood", "Right Mindfulness", "Right Speech", "Right View (Buddha’S", "Noble Eightfold Path)", "Right Use Of Power", "Right Use Of Will", "Righteousness", "Rights (Respect For)", "Risk Taking", "Rituals", "Romance", "Roots", "Sacredness", "Sacrifice", "Sadness", "Salvation", "Sanity", "Satiety", "Satisfaction", "Secrecy (Proper Use)", "Security", "Seeing", "Self-Awareness", "Self-Centeredness", "Self-Confidence", "Self-Control", "Self-Discipline", "Self-Esteem", "Self-Examination", "Self-Expression", "Self-Improvement", "Self-Possession", "Self-Regulation", "Self-Reliance", "Self-Respect", "Self-Restraint", "Self-Righteousness", "Self-Trust", "Sense Of Purpose", "Sensibility", "Sensitivity", "Sensory Pleasure", "Sensuality", "Sentimentality", "Serendipity", "Serenity", "Service", "Sharing", "Shyness", "Silence", "Simplicity", "Sincerity", "Skepticism", "Skill", "Smartness", "Sobriety", "Social Intelligence", "Social Responsibility", "Solidarity", "Solitude", "Soul Evolution", "Soulfulness", "Spirit", "Spiritual Insight", "Spirituality", "Sportsmanship", "Steadfastness", "Stick-To-It-Iveness", "Straightforwardness", "Strength", "Stress (“Good”)", "Study", "Success", "Succor", "Suffering (With", "Understanding)", "Support Of Others", "Surrender", "Sweet-Tempered", "Sympathy", "Synergy", "Tact", "Tactfulness", "Talent", "Taste", "Teaching Others", "Team-Spirit", "Teamwork", "Temperance", "Tenacity", "Tenderness", "Thankfulness", "Thoroughness", "Thoughtfulness", "Thrift", "Time", "Tithing", "Tolerance", "Training", "Tranquility", "Transcendence", "Transcendental Wisdom", "Transformation", "Transition", "Trust", "Trustfulness", "Trustworthiness", "Truth", "Truthfulness", "Unconditional Love", "Understanding", "Unity", "Universality", "Unselfishness", "Valor", "Values", "Verbal Acuity", "Victory", "Vigor", "Virility", "Virtue", "Vision", "Vitality", "Vulnerability", "Wealth", "Wholesomeness", "Will (Proper Use Of)", "Wisdom", "Wonder", "Work", "Workmanship", "Worship", "Worth", "Youthfulness", "Zealousness", "Zest"}; 
        int num = (int)(Math.random()*mats.length); virtue = mats[num];}
        public static void genVice(){String[] mats = {"Abuse", "Addictions", "Adultery", "Adversity", "Aggression", "Agitation", "Alcoholism", "Alienation", "Aloofness", "Ambition", "Anarchy", "Anger", "Angst", "Animosity", "Anxiety", "Apathy", "Approval-Seeking", "Arrogance", "Attachment", "Avarice", "Awkwardness", "Baseness", "Bigotry", "Blame", "Blasphemy", "Boastfulness", "Boredom", "Brutality", "Burnout", "Calculation", "Callousness", "Calumniation", "Capriciousness", "Celebrity", "Censoriousness", "Chaos", "Chauvinism", "Complacency", "Complaining", "Compromise", "Conceit", "Condescension", "Conflict", "Conformity", "Confusion", "Conniving", "Contempt", "Contradiction", "Control", "Corruption", "Cowardice", "Criticism", "Cruelty", "Cunning", "Cursing", "Cynicism", "Death", "Debasement", "Deceit", "Deception", "Definition", "Delusion", "Denial", "Dependency", "Depression", "Derision", "Desecration", "Desire For Fame", "Desolation", "Despair", "Destitution", "Detachment", "Deviance", "Disappointment", "Discord", "Disrespect", "Dissatisfaction", "Dogmatism", "Dominance", "Doubt", "Drudgery", "Dysfunctionality", "Eagerness For Power", "Eccentricity", "Effrontery", "Egoism", "Egotism", "Elitism", "Embarrassment", "Emptiness", "Enmity", "Enviousness", "Envy", "Escapism", "Evil", "Exaggeration", "Excessiveness", "Exclusion", "Expectations", "Exploitation", "Extravagance", "Extremism", "Failure", "Faithlessness", "Falseness", "Fame (Seeking", "After)", "Fantasy", "Fashion", "Fatalism", "Faults", "Fear", "Fight", "Fixations", "Folly", "Forgetfulness", "Frailty", "Fundamentalism", "Furtiveness", "Futility", "Gambling", "Garrulity", "Gaudiness", "Glamour", "Gloominess", "Gluttony", "Gossip", "Greed", "Grief", "Holding Grudges", "Grumpiness", "Guilt", "Hard-Heartedness", "Hate", "Hatred", "Haughtiness", "Hell", "Heresy", "High-Handedness", "Hoarding", "Hostility", "Humiliation", "Hurt", "Hyperbole", "Hypocrisy", "Hysteria", "Ignorance", "Illusion", "Imitation", "Impatience", "Imperfection", "Imperiousness", "Imposture", "Impudence", "Inattentiveness", "Indecency", "Indecision", "Indifference", "Indigence", "Individualism", "Ingratitude", "Inhibitions", "Insanity", "Insatiability", "Insecurity", "Insidiousness", "Insult", "Intolerance", "Intimidation", "Intransigence", "Irony", "Irrationality", "Irresponsibility", "Irritation", "Isolation", "Jealousy", "Judgmental", "Justification", "Know-It-All", "Laziness", "Lecherousness", "Lethargy", "Licentiousness", "Lies", "Loneliness", "Loss", "Lust", "Luxury", "Lying", "Machismo", "Madness", "Maliciousness", "Malignancy", "Manipulation", "Masochism", "Materialism", "Meanness", "Mediocrity", "Meekness", "Melancholy", "Mercilessness", "Misery", "Miserliness", "Mistakes", "Money (Focus On)", "Moodiness", "Naiveté", "Narcissism", "Narrow-Mindedness", "Nastiness", "Neediness", "Negativity", "Neurosis", "Nihilism", "Obedience (Without", "Question)", "Obsession", "Obstinacy", "Opportunism", "Oppression", "Ostentatiousness", "Over-Consumption", "Over-Identification", "Pacifism", "Pain", "Panic", "Passion", "Patronizing", "Pensiveness", "Penury", "Persuasion", "Perversion", "Pessimism", "Pettiness", "Pomposity", "Poverty", "Power", "Prejudice", "Presumption", "Pretense", "Pretentiousness", "Pride", "Privilege", "Problems", "Procrastination", "Prodigality", "Profit-As-Sole-Value", "Profligacy", "Promiscuity", "Promises Un-Kept", "Punishment", "Quarrelsomeness", "Racism", "Rage", "Rape", "Rapaciousness", "Rapacity", "Rashness", "Recklessness", "Regret", "Rejection", "Remorse", "Resentment", "Resignation", "Revenge", "Rudeness", "Righteousness", "Ridicule", "Righteousness", "Rigidity", "Risk-Aversion", "Romantic Fantasy", "Rudeness", "Rumor Spreading", "Ruthlessness", "Sacrifice", "Sadism", "Sadness", "Sarcasm", "Scandal Mongering", "Secrecy", "Seduction", "Self-Centeredness", "Self-Denial", "Self-Destructiveness", "Self-Doubt", "Self-Hatred", "Selfishness", "Self-Pity", "Self-Righteousness", "Sensationalism", "Separateness", "Separation", "Sexual Lust", "Shame", "Shamelessness", "Shyness", "Sin", "Skepticism", "Sloth", "Snobbery", "Sorrow", "Spendthriftness", "Spite", "Spoiling", "Stagnation", "Stinginess", "Stress", "Stubbornness", "Stupidity", "Suffering", "Superficiality", "Superiority", "Suspicion", "Taboos", "Temper Tantrums", "Terror", "Theft", "Timidity", "Torment", "Torture", "Tragedy", "Treason", "Tyranny", "Ugliness", "Unkindness", "Unreason", "Unruliness", "Unyielding", "Vanity", "Venality", "Verbosity", "Vices", "Vindictiveness", "Violence", "Vulnerability", "Wastrelness", "Weakness", "Worry", "Wrath", "Zealotry"}; 
        int num = (int)(Math.random()*mats.length);
        vice = mats[num];}
        public static void genScents(){String[] mats = {"Acai Berry", "Almond", "Aloe Botanic", "Alpine Meadow", "Amber", "Apple", "Baby", "Bamboo", "Bay Rum", "Birch Bark", "Blackberry Sage", "Blush", "Brownie", "Bubblegum  Carnation", "Casa Blanca Lily", "Cedarwood", "Champagne", "Cherry Blossom", "China Lily", "China Musk", "China Rain", "Cilantro", "Cinnamon", "Citron", "Clove", "Coconut", "Cucumber", "Cupcake", "Earth", "Egyptian Musk", "Fig", "Forest Rain", "Frankincense", "French Vanilla", "Fresh Cut Grass", "Fresh Laundry", "Gardenia", "Ginger Lily", "Grapefruit", "Green Tea", "Hibiscus", "Himalaya", "Honey", "Honeydew", "Honeysuckle", "Indica Ivy", "Jade Iris Jasmine", "Kiwi", "Lavender", "Lemon", "Verbena", "Lilac", "Lime", "Leaf", "Limoncello", "Magnolia", "Muguet", "Myrrh", "Nag Champa", "Orange Blossom", "Passion Flower", "Patchouli", "Peach", "Pear", "Pikaki", "Pine", "Needles", "Pineapple", "Pink Martini", "Plum Blossom", "Plumeria", "Pomegranate", "Praline", "Rain", "Rose", "Sage", "Sandalwood", "Scotch Broom", "Sea Mist", "Sheer Musk", "Strawberry", "Tangerine", "Tea Rose", "Tibetan Spice", "Tobacco Tuberose", "Vanilla", "Violet", "Water Lily", "Watermelon", "Waves", "White Ginger", "White Tea", "Woodstock"};
        int num = (int)(Math.random()*mats.length); scent = mats[num];}
        
        public void genJob() {
     String[] jobs = {"Warrior","Paladin","Wizard","Shopkeeper","Courier","Archaeologist","Scribe","Imagineer","Priest","Gardener","Scribne","Messenger","Blacksmith","Metallurgist","Dancer","Scout","Familiar Caretaker","Beast Master","Fisher","hunter","Healer","Nurse","Guard","Scientist",
                           "Lawyer","Professional Appraiser","Potter","Alchemist","Mercenary","Accountant","Magician","Oracle","Seer","Night Watchman","Serial Killer","Potion Master","Aerial Scout","Artist","Spell Weaver","Hatchling Sitter","Forager","Cook","Beekeeper","Farmer","Jeweler","Seamstress",
                           "Tailor","Weaver","Mason","Writer","Carpenter","Peacemaker","Diplomat","Healer","Spy","Vault Guard","Historian","Scholar","Philosopher","Undertaker","Scryer","Matchmaker","Cartographer","Logger","Astronomer","Pirate","Botanist","Mechanic","Dentist","Nanny","Exalter",
                            "Gamekeeper","Baker","Barber","Hairdresser","Explorer","Cooper","Brewster","Butcher","Maid","Housekeeper","Tracker","Innkeeper","Cheesemaker","Aviary keeper","Silk-Worm Keeper","Spider Keeper","Shepherd","Miner","Lair Construction Crew","Leather Worker","Tanner",
                            "Potter","Spinner","Dyer","Archardist","Tree-keeper","Paper Maker","Candlemaker","Glass Blower","Kite-Maker","Brewmaster","Wine Master","Herbalist","Caravan Leader","Messenger","Exotic Dancer","Gladiator","Electrician","Engineer","Mechanic","Translator","Playwright",
                            "Composer","Trader","Chemist","Illusionist","Bard","Luthier","Actor","Embroiderer","Farrier","Haberdasher","Soap Maker","Conman","Pickpocket","Apothecary","Kennel Master","Ward Crafter","Nest Sitter","Festival Keeper","Anarchist","Bandit","Cavelier","Daredevil","Espionage",
                             "Ninja","Poacher","Knight","Musketeer","Pillager","Samurai","Savager","Seafarer","Master-At-Arms","Slayer","Viking","Ranger","Rogue","Stalker","Theif","Trapper","Zealot","Archmage","Bishop","Conjuerer","Invoker","Jinx","Lich","Mage","Magi","Mediator","Monk","Mystic",
                            "Necromancer","Occultist","Saint","Sorcerer","Sprite","Summoner","Trickster","Warlock","Wizard","Witch","Cleric","Doctor","Druid","Herbalist","Purifier","Sage","Shaman","Surgeon","Sylph","Witch Doctor","Bouncer","Lookout","Mafioso","Consigliere","Warden","Apiarist","Arborist",
                           "Collector","Deepsea Diver","Excavator","Fisher","Fletcher","Florist","Fungiculturalist","Gatherer","Gravedigger","Harvester","Hoarder","Hobbyist","Reaper","Scavenger","Adviser","Archivist","Coach","Courtier","Educator","Teacher","Librarian","Mentor","Pedagogue","Proctor",
                            "Professor","Reporter","Storyteller","Savant","Trainer","Locksmith","Woodcarver"};
      int num = (int)(Math.random()*jobs.length);
      hobbies = jobs[num]+", ";
      num = (int)(Math.random()*jobs.length);
      hobbies += jobs[num];
  }  
        
        
        
        public static String makeBio() {
            String bio = "";
            bio += "[center][color=black][size=7][font=times new roman]"+name+"[/font][/size]\n" +
"[size=4][font=calibri]"+quote+"[/font][/size][/center]\n" +
"\n" +
"\n" +
"[center][img]"+hb+"[/img][/center]\n" +
"[columns][img]"+vb1+"[/img][nextcol]\n" +
"[center][b][font=times new roman]A B O U T[/font][/b]\n" +
"[img]"+fd+"[/img][/center][columns][size=3][font=helvetica][b]Nickname[/b]: "+nickname+"\n" +
"[b]Age:[/b] "+age+" \n" +
"[b]Gender:[/b] "+gender+"\n" +
"[b]Pronouns:[/b] "+pronouns+"\n" +
"[b]Sexuality:[/b] "+sexuality+"\n" +
"\n" +
"[b]Residence:[/b] "+residence+"\n" +
"[b]Birthplace:[/b] "+birthplace+"\n" +
"\n" +
"[b]Likes:[/b] "+likes+"\n" +
"[b]Dislikes:[/b] "+dislikes+"\n" +
"[b]Hobbies:[/b] "+hobbies+"\n" +
"\n" +
"[b]Birth Flight:[/b] "+birthfl+"\n" +
"[b]Origin: [/b] "+orig+"\n" +
"[color=transparent]xxxxxxxxxxxxxxxxx[/color][nextcol][size=3][font=helvetica][b]Mate:[/b] [url="+mateURL+"]"+matename+"[/url]\n" +
"[b]Relatives:[/b] [url="+relURL+"]"+relname+"[/url]\n" +
"[b]Friends:[/b] [url="+friendURL+"]"+friendname+"[/url]\n" +
"[b]Enemies:[/b] [url="+enemyURL+"]"+enemyname+"[/url]\n" +
"[b]Thread Picks:[/b] 0\n" +
"\n" +
"[b]Align:[/b] "+align+"\n" +
"[b]Virtue:[/b] "+virtue+"\n" +
"[b]Vice:[/b] "+vice+"\n" +
"\n" +
"[b]Scent:[/b] "+scent+"\n" +
"\n" +
"[color=transparent]xxxxxxxxxxxxxxxxx[/color]\n" +
"[/font]\n" +
"[/columns]\n" +
"\n" +
"\n" +
"[center][b][font=times new roman]F A M I L I A R S[/font][/b]\n" +
"[img]"+fd+"[/img]\n" +
"\n" +
"[item="+item1+"][item="+item2+"][item="+item3+"]\n" +
"\n" +
"[nextcol][img]"+vb2+"[/img]\n" +
"[/columns]\n" +
"[center][img]"+hd+"[/img][/center][size=3][font=helvetica]\n" +
"[center][font=times new roman][color=black][size=5]B I O G R A P H Y[/size][/font][/center][color=black]\n" +
"\n" +
"[color=transparent]xxxxxx[/color]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer viverra sapien quis tempor commodo. Sed ultricies a odio quis malesuada. Curabitur dolor nulla, malesuada id dapibus eget, posuere ut tellus. Morbi non accumsan nisl. Aenean viverra commodo est vel sagittis. Vivamus nec condimentum tellus. Pellentesque eu mauris vitae risus vulputate venenatis. Morbi egestas fermentum porta.\n" +
"\n" +
"[color=transparent]xxxxxx[/color]Ut fringilla sem eget fringilla suscipit. Donec commodo ex ac risus euismod euismod. Quisque porttitor elit tortor, eget laoreet risus interdum sed. In vehicula urna ut sagittis vehicula. Aenean sed leo justo. Vivamus imperdiet, est sit amet egestas consequat, risus magna varius augue, tincidunt porttitor odio lectus ac neque. Donec vel dolor est. Nullam viverra magna vitae tortor eleifend imperdiet. Nam aliquam nibh ut ultrices auctor. Proin ultrices finibus purus, eu commodo urna tempor vel. Nulla eu risus sit amet nibh fermentum commodo. Proin odio ex, scelerisque ac eleifend id, blandit at ligula. Phasellus et ante ac sapien vehicula semper ac et ex. Integer sit amet ante mattis, mollis est non, convallis lectus. Nulla lorem lorem, tincidunt sed auctor in, cursus sit amet tortor. Sed dapibus at lectus vel tristique.\n" +
"\n" +
"[color=transparent]xxxxxx[/color]Nulla ac feugiat leo, a lobortis magna. Sed et vulputate leo, quis scelerisque leo. Donec imperdiet nulla laoreet enim luctus luctus. Sed commodo orci vitae sem sollicitudin elementum. Aliquam at lectus diam. Aliquam massa sem, mollis quis tristique dictum, facilisis non elit. Integer tristique eu risus ut tempor. Quisque tincidunt diam id efficitur varius.\n" +
"\n" +
"[color=transparent]xxxxxx[/color]Nullam mollis ante consequat mattis vehicula. In pulvinar efficitur consequat. Proin mi lectus, interdum sed metus ut, tincidunt tempor metus. Donec ultrices lorem libero, nec sollicitudin ex facilisis vel. Quisque sodales in ex sit amet convallis. Nullam dapibus sed elit quis scelerisque. Aenean neque diam, placerat pellentesque odio sit amet, venenatis fringilla eros. Sed pharetra nibh at vestibulum lacinia.\n" +
"\n" +
"[color=transparent]xxxxxx[/color]Proin volutpat lectus urna, at eleifend elit interdum id. Fusce posuere risus pretium ligula lacinia congue. Suspendisse a mi et nulla auctor hendrerit at vitae urna. Donec volutpat dui nec lectus malesuada, nec facilisis nunc faucibus. Fusce facilisis at diam quis feugiat. Morbi auctor sodales leo, sit amet vulputate diam porttitor nec. Aliquam tristique gravida velit vitae pellentesque. In hac habitasse platea dictumst. Aenean at aliquam dolor, sed feugiat dolor.\n" +
"\n" +
"\n" +
"\n" +
"[center][url=http://www1.flightrising.com/forums/baz/1532088][img]http://orig14.deviantart.net/f3d4/f/2016/232/4/5/oie_oie_overlay__1__by_intimer_genetics_inc-daens5k.gif[/img][/url]				\n";
       
            return bio;
        }
        
    }

import java.util.HashMap;
import java.util.Map;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Isabel
 */
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    static bio current = new bio();
    
    public Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        NameField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        FlightField = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        JobField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        QuoteField = new javax.swing.JTextArea();
        URLField = new javax.swing.JTextField();
        ThemeField = new javax.swing.JTextField();
        GenerateButton = new javax.swing.JButton();
        RandomizeButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        CodeField = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        NameField.setText("Unnamed");
        NameField.setBorder(javax.swing.BorderFactory.createTitledBorder("Name"));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        FlightField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arcane", "Earth", "Fire", "Ice", "Light", "Lightning", "Nature", "Plague", "Shadow", "Water", "Wind" }));

        jLabel1.setText("Flight");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(FlightField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addComponent(FlightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JobField.setText("None");
        JobField.setBorder(javax.swing.BorderFactory.createTitledBorder("Role"));

        QuoteField.setColumns(20);
        QuoteField.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        QuoteField.setLineWrap(true);
        QuoteField.setRows(3);
        QuoteField.setText("Nature was here a series of wonders, and a fund of delight.");
        QuoteField.setWrapStyleWord(true);
        QuoteField.setBorder(javax.swing.BorderFactory.createTitledBorder("Quote"));
        jScrollPane2.setViewportView(QuoteField);

        URLField.setText("https://www.youtube.com/");
        URLField.setBorder(javax.swing.BorderFactory.createTitledBorder("Link to theme"));

        ThemeField.setText("Theme");
        ThemeField.setBorder(javax.swing.BorderFactory.createTitledBorder("Name of theme"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JobField))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(URLField, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ThemeField)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JobField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(URLField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThemeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GenerateButton.setText("Generate");
        GenerateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateButtonActionPerformed(evt);
            }
        });

        RandomizeButton.setText("Randomize");
        RandomizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RandomizeButtonActionPerformed(evt);
            }
        });

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        CodeField.setColumns(20);
        CodeField.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        CodeField.setLineWrap(true);
        CodeField.setRows(5);
        jScrollPane3.setViewportView(CodeField);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(GenerateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RandomizeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExitButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenerateButton)
                    .addComponent(RandomizeButton)
                    .addComponent(ExitButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        jLabel2.setText("App made by VolatileMatter #160158");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GenerateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateButtonActionPerformed
        // TODO add your handling code here:
        current.setName(NameField.getText());
        current.setJob(JobField.getText());
        current.setQuote(QuoteField.getText());
        current.setUrl(URLField.getText());
        current.setTheme(ThemeField.getText());
        current.setFlight(FlightField.getSelectedItem().toString());
        current.setImgs();
        current.makeName();
        
        CodeField.setText(current.makeBio());
        current.setBio("");
    }//GEN-LAST:event_GenerateButtonActionPerformed

    private void RandomizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RandomizeButtonActionPerformed
        // TODO add your handling code here:
        current.genName();
        current.genJob();
        NameField.setText(current.getName());
        JobField.setText(current.getJob());
    }//GEN-LAST:event_RandomizeButtonActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea CodeField;
    private javax.swing.JButton ExitButton;
    private javax.swing.JComboBox<String> FlightField;
    private javax.swing.JButton GenerateButton;
    private javax.swing.JTextField JobField;
    private javax.swing.JTextField NameField;
    private javax.swing.JTextArea QuoteField;
    private javax.swing.JButton RandomizeButton;
    private javax.swing.JTextField ThemeField;
    private javax.swing.JTextField URLField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}

class bio {
    static String biotxt = "";
    public static void setBio(String a){biotxt=a;}
    
    static String prefix = "";
    
    static String theme = "";
    public static String getTheme() {return theme;}
    public static void setTheme(String a) {theme=a;}
    
    static String url = "";
    public static String getUrl() {return url;}
    public static void setUrl(String a) {url=a;}
    
    public static String name = "name";
    public static String getName() {return name;}
    public static void setName(String a) {name=a;}
    
    static String job = "Cake Sampler";
    public static String getJob(){return job;}
    public static void setJob(String a) {job=a;}
    
    public static String quote = "Nature was here a series of wonders, and a fund of delight.";
    public static String getQuote() {return quote;}
    public static void setQuote(String a) {quote=a;}
    
    static String imgs[] = {"Flag","Divider","Items+frame","Picture","Top Clouds","Left Clouds","Bottom Clouds"};
    public static String[] getImgs() {return imgs;}
    public static void setImgs() {imgs=makeImgs(flight);}
    
    static String flight = "";
    public static String getFlight() {return flight;}
    public static void setFlight(String a) {flight=a;}
    
    static String color = "";
    public static String getColor() {return color;}
    public static void setColor(String a) {color=a;}
    
    public static String[] makeImgs(String flight) {
        String format[] = {"Flag","Divider","Items+frame","Picture","Top Clouds","Left Clouds","Bottom Clouds"};
        String colors[] = {"#5c0f51","#422a0c","#6b2412","#12536b","#6b4812","#12606b","#125c0f","#5c0f0f","#390f5c","#0f2c5c","#13420c"};
        if (flight == "Arcane"){ String arcane[] = {"http://i.imgur.com/YwTdKmZ.png","http://i.imgur.com/5NctoMN.png","[img]http://i.imgur.com/4eIcXvT.png[/img][img]http://i.imgur.com/6WjIHtz.png[/img][img]http://i.imgur.com/KKBoYHG.png[/img]","http://i.imgur.com/yNHVOEF.png","http://i.imgur.com/fMu4uek.png","http://i.imgur.com/yJdaOa7.png","http://i.imgur.com/hst8rQk.png"}; color=colors[0]; return arcane;}
        if (flight == "Earth"){String earth[] = {"http://i.imgur.com/bUZ8DDp.png","http://i.imgur.com/0tHi0QY.png","[img]http://i.imgur.com/JGzUnqN.png[/img][img]http://i.imgur.com/roHspPc.png[/img][img]http://i.imgur.com/ZbUynHB.png[/img]","http://i.imgur.com/T8OxhiY.png","http://i.imgur.com/gUAbSpp.png","http://i.imgur.com/MQ7SSlt.png","http://i.imgur.com/Q9j7MsY.png"}; color=colors[1]; return earth; }
        if (flight ==  "Fire"){String fire[] = {"http://i.imgur.com/8AZwdTF.png","http://i.imgur.com/630k9ze.png","[img]http://i.imgur.com/1sEmKxK.png[/img][img]http://i.imgur.com/n0XPbrS.png[/img][img]http://i.imgur.com/ZHLkCYn.png[/img]","http://i.imgur.com/PHcgGq9.png","http://i.imgur.com/YO6u0Sw.png","http://i.imgur.com/SdVLihY.png","http://i.imgur.com/vTE6ZDu.png"}; color=colors[2]; return fire; }
        if (flight == "Ice"){ String ice[] = {"http://i.imgur.com/EVeAieg.png","http://i.imgur.com/g1r5Arr.png","[img]http://i.imgur.com/lrW4NYZ.png[/img][img]http://i.imgur.com/eQISvNE.png[/img][img]http://i.imgur.com/d2x1E95.png[/img]","http://i.imgur.com/yJwrYCu.png","http://i.imgur.com/c6QVc09.png","http://i.imgur.com/OAhu6kg.png","http://i.imgur.com/bwDTcek.png"}; color=colors[3]; return ice; }
        if (flight == "Light"){ String light[] = {"http://i.imgur.com/GdNRDjO.png","http://i.imgur.com/OKmiJV2.png","[img]http://i.imgur.com/2h1UCip.png[/img][img]http://i.imgur.com/frePxUm.png[/img][img]http://i.imgur.com/MfFLYal.png[/img]","http://i.imgur.com/9WXuL23.png","http://i.imgur.com/8OR6x9G.png","http://i.imgur.com/xdcapEX.png","http://i.imgur.com/gLoZ9yf.png"}; color=colors[4]; return light; }
        if (flight == "Lightning"){ String lightning[] = {"http://i.imgur.com/fSt3TcM.png","http://i.imgur.com/Rxg8fVu.png","[img]http://i.imgur.com/clrtcoc.png[/img][img]http://i.imgur.com/Q855hho.png[/img][img]http://i.imgur.com/QraE8Hg.png[/img]","http://i.imgur.com/QwiLRqO.png","http://i.imgur.com/tblG5Rf.png","http://i.imgur.com/zdiRu5z.png","http://i.imgur.com/SKPKUiK.png"}; color=colors[5]; return lightning; }
        if (flight == "Nature"){ String nature[] = {"http://i.imgur.com/C6i5Tso.png","http://i.imgur.com/gExhUrk.png","[img]http://i.imgur.com/F3mqHXX.png[/img][img]http://i.imgur.com/dpBMHif.png[/img][img]http://i.imgur.com/yWwM34s.png[/img]","http://i.imgur.com/h8fJMv6.png","http://i.imgur.com/hkV6zJm.png","http://i.imgur.com/J6LimBo.png","http://i.imgur.com/2lHVIPW.png"};color=colors[6]; return nature; }
        if (flight == "Plague"){ String plague[] = {"http://i.imgur.com/mylDUrK.png","http://i.imgur.com/6hMqgni.png","[img]http://i.imgur.com/m6T46Rf.png[/img][img]http://i.imgur.com/qKj9F57.png[/img][img]http://i.imgur.com/XITqnSz.png[/img]","http://i.imgur.com/CvFFG1b.png","http://i.imgur.com/mibJOdP.png","http://i.imgur.com/5udSdSJ.png","http://i.imgur.com/7N94txQ.png"};color=colors[7]; return plague; }
        if (flight == "Shadow"){ String shadow[] = {"http://i.imgur.com/lt94Mms.png","http://i.imgur.com/zYRkgFY.png","[img]http://i.imgur.com/JcP1Cf1.png[/img][img]http://i.imgur.com/N4t3U9t.png[/img][img]http://i.imgur.com/nUuxAk5.png[/img]","http://i.imgur.com/DP28vl7.png","http://i.imgur.com/idAxJxC.png","http://i.imgur.com/djp3H1n.png","http://i.imgur.com/NMCkfq3.png"};color=colors[8]; return shadow; }
        if (flight == "Water"){ String water[] = {"http://i.imgur.com/zn4ZtAA.png","http://i.imgur.com/pcJ09QL.png","[img]http://i.imgur.com/WK1zuUU.png[/img][img]http://i.imgur.com/AsPLTdy.png[/img][img]http://i.imgur.com/fmC8OLf.png[/img]","http://i.imgur.com/hVo8ydL.png","http://i.imgur.com/pFYba0O.png","http://i.imgur.com/D0FhT0I.png","http://i.imgur.com/lD8F9NI.png"};color=colors[9]; return water; }
        if (flight == "Wind"){ String wind[] = {"http://i.imgur.com/8tcbThp.png","http://i.imgur.com/4c5SZDJ.png","[img]http://i.imgur.com/1JJEDWA.png[/img][img]http://i.imgur.com/ewQWKcI.png[/img][img]http://i.imgur.com/kaL1GmO.png[/img]","http://i.imgur.com/Xv7kjnB.png","http://i.imgur.com/gY6d2IT.png","http://i.imgur.com/WoMLxPP.png","http://i.imgur.com/MLoCZRF.png"}; color=colors[10]; return wind; }
        return format;
    }
        public static void makeName() {
        int leng = 57-name.length();
        for (int i =0; i<(leng/2); i++){
            prefix +="x";
        }
    }     
    public static String makeBio() {
        biotxt+="[center][img]"+imgs[0]+"[/img][color=#EEEEEE]"+prefix+"[/color][font=Book Antiqua][size=4][size=7][color="+color+"]"+name+"[/color][/size][color=#EEEEEE]"+prefix+"[/color][img]"+imgs[0]+"[/img][/center]\n" +
"[center][size=4][color="+color+"][font=Book Antiqua]"+job+"[/font][/size][/color][/center]\n" +
"\n" +
"\n" +
"[center][img]"+imgs[1]+"[/img][/center]\n" +
"[center]"+imgs[2]+"[/center]\n" +
"---------------\n" +
"[columns]\n" +
"[center][img]"+imgs[3]+"[/img][/center]\n" +
"[center]--------\n" +
"[font=Book Antiqua][color="+color+"][size=5]♛ \n" +
"\""+quote+"\"\n" +
"♛ [/color][/size][/font][/center]\n" +
"----------\n" +
"[color=#EEEEEE]_________________________[/color]\n" +
"[nextcol]\n" +
"[img]"+imgs[4]+"[/img]\n" +
"[columns]\n" +
"[center][font=Book Antiqua][size=4][size=5][color="+color+"]B I O G R A P H Y[/color][/size][/center]\n" +
"\n" +
"\n" +
"[center][url="+url+"][size=3][font=Book Antiqua][u]"+theme+"[/u][/font][/size][/url][/center]\n" +
"[font=Book Antiqua][size=3.5]\n" +
"[color=#EEEEEE]______[/color] [color="+color+"][size=5]L[/size]orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.[/color]\n" +
"\n" +
"[color=#EEEEEE]______[/color] [color="+color+"][size=5]S[/size]ed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.[/color]\n" +
"[/font][/size]\n" +
"[nextcol]\n" +
"[right][img]"+imgs[5]+"[/img][/right]\n" +
"[/columns]\n" +
"[color=#EEEEEE]_[/color][img]"+imgs[6]+"[/img]\n" +
"[/columns]\n" +
"\n" +
"\n" +
"---------------\n" +
"[center][img]"+imgs[1]+"[/img][/center]\n" +
"---------------\n" +
"\n" +
"[center][size=2][color="+color+"][i]Bio template by @Mibella, find it [url=http://www1.flightrising.com/forums/cc/1895073]here[/url].[/i][/color][/size][/center]";
        return biotxt;
    }    
    public void genJob() {
     String[] jobs = {"Warrior","Paladin","Wizard","Shopkeeper","Courier","Archaeologist","Scribe","Imagineer","Priest","Gardener","Scribne","Messenger","Blacksmith","Metallurgist","Dancer","Scout","Familiar Caretaker","Beast Master","Fisher","hunter","Healer","Nurse","Guard","Scientist",
                           "Lawyer","Professional Appraiser","Potter","Alchemist","Mercenary","Accountant","Magician","Oracle","Seer","Night Watchman","Serial Killer","Potion Master","Aerial Scout","Artist","Spell Weaver","Hatchling Sitter","Forager","Cook","Beekeeper","Farmer","Jeweler","Seamstress",
                           "Tailor","Weaver","Mason","Writer","Carpenter","Peacemaker","Diplomat","Healer","Spy","Vault Guard","Historian","Scholar","Philosopher","Undertaker","Scryer","Matchmaker","Cartographer","Logger","Astronomer","Pirate","Botanist","Mechanic","Dentist","Nanny","Exalter",
                            "Gamekeeper","Baker","Barber","Hairdresser","Explorer","Cooper","Brewster","Butcher","Maid","Housekeeper","Tracker","Innkeeper","Cheesemaker","Aviary keeper","Silk-Worm Keeper","Spider Keeper","Shepherd","Miner","Lair Construction Crew","Leather Worker","Tanner",
                            "Potter","Spinner","Dyer","Archardist","Tree-keeper","Paper Maker","Candlemaker","Glass Blower","Kite-Maker","Brewmaster","Wine Master","Herbalist","Caravan Leader","Messenger","Exotic Dancer","Gladiator","Electrician","Engineer","Mechanic","Translator","Playwright",
                            "Composer","Trader","Chemist","Illusionist","Bard","Luthier","Actor","Embroiderer","Farrier","Haberdasher","Soap Maker","Conman","Pickpocket","Apothecary","Kennel Master","Ward Crafter","Nest Sitter","Festival Keeper","Anarchist","Bandit","Cavelier","Daredevil","Espionage",
                             "Ninja","Poacher","Knight","Musketeer","Pillager","Samurai","Savager","Seafarer","Master-At-Arms","Slayer","Viking","Ranger","Rogue","Stalker","Theif","Trapper","Zealot","Archmage","Bishop","Conjuerer","Invoker","Jinx","Lich","Mage","Magi","Mediator","Monk","Mystic",
                            "Necromancer","Occultist","Saint","Sorcerer","Sprite","Summoner","Trickster","Warlock","Wizard","Witch","Cleric","Doctor","Druid","Herbalist","Purifier","Sage","Shaman","Surgeon","Sylph","Witch Doctor","Bouncer","Lookout","Mafioso","Consigliere","Warden","Apiarist","Arborist",
                           "Collector","Deepsea Diver","Excavator","Fisher","Fletcher","Florist","Fungiculturalist","Gatherer","Gravedigger","Harvester","Hoarder","Hobbyist","Reaper","Scavenger","Adviser","Archivist","Coach","Courtier","Educator","Teacher","Librarian","Mentor","Pedagogue","Proctor",
                            "Professor","Reporter","Storyteller","Savant","Trainer","Locksmith","Woodcarver"};
      int num = (int)(Math.random()*jobs.length);
      job = jobs[num];
  }  
    public static void genName() {
  String[] prefix = {"anti","auto","de","dis","down","extra","hyper","il","im","in","ir","inter","mega","mid","mis","non","over","out","post","pre","pro","re","semi","sub","sub","super","tele","trans","ultra","un","under","up"};
  String[] firCon = {"t", "n", "s", "r", "d", "f", "c", "b", "z"};
  String[] secCon = {"r", "h", "s","v"};
  String[] firVow = {"e", "a", "i", "o", "oo", "u"};
  String[] thiCon = {"t", "v", "w", "x", "ck", "g", "p", "ch", "sh","ph","rr",};
  String[] secVow = {"e", "i", "o","a","u"}; 
  String[] fouCon = {"r", "s", "y","de","x","ra","le",};
  String[] suffix = {"iode","able","ac","acity","ocity","ade","age","aholic","oholic","al","algia","an","ian","ance","ant","ar","ard","arian","arium","orium","ary","ation","ate","ative","cide","cracy","crat","cule","cy","cycle","dom","dox","ed","ee","ectomy","eer","emia","en","ence","ency","ent","er","ern","escence","ese","esque","ess","est","etic","ette","ful","fy","gam","gamy","gon","gonic","hood","ial","ian","iasis","iatric","ible","ic","ical","ile","ily","ine","ing","ion","ious","ish","ism","ist","ite","itis","ity","ive","ization","ize","less","let","like","ling","loger","logist","log","ly","ment","ness","oid","ology","oma","onym","opia","opsy","or","ory","osis","ostomy","otomy","ous","path","pathy","phile","phobia","phone","phyte","plegia","plegic","pnea","scopy","scope","scribe","script","sect","ship","sion","some","sophy","sophic","th","tion","tome","tomy","tude","trophy","tude","ty","ular","uous","ure","ward","ware","wise"};
  int numnum = (int)(Math.random() * 100000);  
  String result = " ";         
        //start with the prefix
        if(Math.random() < .5) {
            result += prefix[(int)(Math.random() * prefix.length)];
        }
        
        //then the first consonant
        if(Math.random() < .7) {
            result += firCon[(int)(Math.random() * firCon.length)];
        }
        
        //then the possible second consonant
        if(Math.random() < .4) {
            result += secCon[(int)(Math.random() * secCon.length)];
        }
        
        //then the first vowel
        if(Math.random() < .9) {
            result += firVow[(int)(Math.random() * firVow.length)];
        }
        
        //then the third consonant
        if(Math.random() < .8) {
            result += thiCon[(int)(Math.random() * thiCon.length)];
        }
        
        //then the second vowel
        if(Math.random() < .6) {
            result += secVow[(int)(Math.random() * secVow.length)];
        }
        
        //then the fourth consonant
        if(Math.random() < .5) {
            result += fouCon[(int)(Math.random() * fouCon.length)];
        }
        
        //possibly another vowel?
        if(Math.random() < .5) {
            result += secVow[(int)(Math.random() * secVow.length)];
        }
        
        //then the suffix
        if (Math.random() < .5) {
            result += suffix[(int)(Math.random() * suffix.length)];
        }
        
        //if it's short, then maybe repeat it. (Seg -> Segseg)
        if (Math.random() < .7 && (result.length() < 6)) {
        result += result.substring(1,result.length());
        }
        
        //lastly, capitalize the first letter.
        String temp1 = result.substring(1,2);
        String temp2 = result.substring(2,result.length());
        temp1 = temp1.toUpperCase();
        result = temp1 + temp2;
        
        //if it's too long, delete it. 
        if (result.length() > 9) {
             result = result.substring(0,8);
        }  
        name = result;       
    }
    
    
    
    
}